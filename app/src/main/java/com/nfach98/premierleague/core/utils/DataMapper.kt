package com.nfach98.premierleague.core.utils

import com.nfach98.premierleague.core.data.source.local.entity.*
import com.nfach98.premierleague.core.data.source.remote.response.*
import com.nfach98.premierleague.core.domain.model.*

object DataMapper {
    //Table
    fun mapTableResponsesToEntities(input: List<TableResponse>): List<TableEntity> {
        val tableList = ArrayList<TableEntity>()
        input.map {
            val table = TableEntity(
                idStanding = it.idStanding,
                intRank = it.intRank,
                idTeam = it.idTeam,
                strTeam = it.strTeam,
                strTeamBadge = it.strTeamBadge,
                idLeague = it.idLeague,
                strLeague = it.strLeague,
                strSeason = it.strSeason,
                strForm = it.strForm,
                strDescription = it.strDescription,
                intPlayed = it.intPlayed,
                intWin = it.intWin,
                intLoss = it.intLoss,
                intDraw = it.intDraw,
                intGoalsFor = it.intGoalsFor,
                intGoalsAgainst = it.intGoalsAgainst,
                intGoalDifference = it.intGoalDifference,
                intPoints = it.intPoints,
                dateUpdated = it.dateUpdated
            )
            tableList.add(table)
        }
        return tableList
    }

    fun mapTableEntitiesToDomain(input: List<TableEntity>): List<Table> =
        input.map {
            Table(
                idStanding = it.idStanding,
                intRank = it.intRank,
                idTeam = it.idTeam,
                strTeam = it.strTeam,
                strTeamBadge = it.strTeamBadge,
                idLeague = it.idLeague,
                strLeague = it.strLeague,
                strSeason = it.strSeason,
                strForm = it.strForm,
                strDescription = it.strDescription,
                intPlayed = it.intPlayed,
                intWin = it.intWin,
                intLoss = it.intLoss,
                intDraw = it.intDraw,
                intGoalsFor = it.intGoalsFor,
                intGoalsAgainst = it.intGoalsAgainst,
                intGoalDifference = it.intGoalDifference,
                intPoints = it.intPoints,
                dateUpdated = it.dateUpdated
            )
        }

    //Match
    fun mapMatchResponsesToEntities(input: List<MatchResponse>): List<MatchEntity> {
        val matchList = ArrayList<MatchEntity>()
        input.map {
            val match = MatchEntity(
                dateEvent = it.dateEvent,
                dateEventLocal = it.dateEventLocal,
                idAPIfootball = it.idAPIfootball,
                idAwayTeam = it.idAwayTeam,
                idEvent = it.idEvent,
                idHomeTeam = it.idHomeTeam,
                idLeague = it.idLeague,
                idSoccerXML = it.idSoccerXML,
                intAwayScore = it.intAwayScore,
                intAwayShots = it.intAwayShots,
                intHomeScore = it.intHomeScore,
                intHomeShots = it.intHomeShots,
                intRound = it.intRound,
                intSpectators = it.intSpectators,
                strAwayFormation = it.strAwayFormation,
                strAwayGoalDetails = it.strAwayGoalDetails,
                strAwayLineupDefense = it.strAwayLineupDefense,
                strAwayLineupForward = it.strAwayLineupForward,
                strAwayLineupGoalkeeper = it.strAwayLineupGoalkeeper,
                strAwayLineupMidfield = it.strAwayLineupMidfield,
                strAwayLineupSubstitutes = it.strAwayLineupSubstitutes,
                strAwayRedCards = it.strAwayRedCards,
                strAwayTeam = it.strAwayTeam,
                strAwayYellowCards = it.strAwayYellowCards,
                strBanner = it.strBanner,
                strCity = it.strCity,
                strCountry = it.strCountry,
                strDescriptionEN = it.strDescriptionEN,
                strEvent = it.strEvent,
                strEventAlternate = it.strEventAlternate,
                strFanart = it.strFanart,
                strFilename = it.strFilename,
                strHomeFormation = it.strHomeFormation,
                strHomeGoalDetails = it.strHomeGoalDetails,
                strHomeLineupDefense = it.strHomeLineupDefense,
                strHomeLineupForward = it.strHomeLineupForward,
                strHomeLineupGoalkeeper = it.strHomeLineupGoalkeeper,
                strHomeLineupMidfield = it.strHomeLineupMidfield,
                strHomeLineupSubstitutes = it.strHomeLineupSubstitutes,
                strHomeRedCards = it.strHomeRedCards,
                strHomeTeam = it.strHomeTeam,
                strHomeYellowCards = it.strHomeYellowCards,
                strLeague = it.strLeague,
                strLocked = it.strLocked,
                strMap = it.strMap,
                strOfficial = it.strOfficial,
                strPoster = it.strPoster,
                strPostponed = it.strPostponed,
                strResult = it.strResult,
                strSeason = it.strSeason,
                strSport = it.strSport,
                strSquare = it.strSquare,
                strStatus = it.strStatus,
                strThumb = it.strThumb,
                strTime = it.strTime,
                strTimeLocal = it.strTimeLocal,
                strTimestamp = it.strTimestamp,
                strTVStation = it.strTVStation,
                strTweet1 = it.strTweet1,
                strTweet2 = it.strTweet2,
                strTweet3 = it.strTweet3,
                strVenue = it.strVenue,
                strVideo = it.strVideo
            )
            matchList.add(match)
        }
        return matchList
    }

    fun mapMatchEntitiesToDomain(input: List<MatchEntity>): List<Match> =
        input.map {
            Match(
                dateEvent = it.dateEvent,
                dateEventLocal = it.dateEventLocal,
                idAPIfootball = it.idAPIfootball,
                idAwayTeam = it.idAwayTeam,
                idEvent = it.idEvent,
                idHomeTeam = it.idHomeTeam,
                idLeague = it.idLeague,
                idSoccerXML = it.idSoccerXML,
                intAwayScore = it.intAwayScore,
                intAwayShots = it.intAwayShots,
                intHomeScore = it.intHomeScore,
                intHomeShots = it.intHomeShots,
                intRound = it.intRound,
                intSpectators = it.intSpectators,
                strAwayFormation = it.strAwayFormation,
                strAwayGoalDetails = it.strAwayGoalDetails,
                strAwayLineupDefense = it.strAwayLineupDefense,
                strAwayLineupForward = it.strAwayLineupForward,
                strAwayLineupGoalkeeper = it.strAwayLineupGoalkeeper,
                strAwayLineupMidfield = it.strAwayLineupMidfield,
                strAwayLineupSubstitutes = it.strAwayLineupSubstitutes,
                strAwayRedCards = it.strAwayRedCards,
                strAwayTeam = it.strAwayTeam,
                strAwayYellowCards = it.strAwayYellowCards,
                strBanner = it.strBanner,
                strCity = it.strCity,
                strCountry = it.strCountry,
                strDescriptionEN = it.strDescriptionEN,
                strEvent = it.strEvent,
                strEventAlternate = it.strEventAlternate,
                strFanart = it.strFanart,
                strFilename = it.strFilename,
                strHomeFormation = it.strHomeFormation,
                strHomeGoalDetails = it.strHomeGoalDetails,
                strHomeLineupDefense = it.strHomeLineupDefense,
                strHomeLineupForward = it.strHomeLineupForward,
                strHomeLineupGoalkeeper = it.strHomeLineupGoalkeeper,
                strHomeLineupMidfield = it.strHomeLineupMidfield,
                strHomeLineupSubstitutes = it.strHomeLineupSubstitutes,
                strHomeRedCards = it.strHomeRedCards,
                strHomeTeam = it.strHomeTeam,
                strHomeYellowCards = it.strHomeYellowCards,
                strLeague = it.strLeague,
                strLocked = it.strLocked,
                strMap = it.strMap,
                strOfficial = it.strOfficial,
                strPoster = it.strPoster,
                strPostponed = it.strPostponed,
                strResult = it.strResult,
                strSeason = it.strSeason,
                strSport = it.strSport,
                strSquare = it.strSquare,
                strStatus = it.strStatus,
                strThumb = it.strThumb,
                strTime = it.strTime,
                strTimeLocal = it.strTimeLocal,
                strTimestamp = it.strTimestamp,
                strTVStation = it.strTVStation,
                strTweet1 = it.strTweet1,
                strTweet2 = it.strTweet2,
                strTweet3 = it.strTweet3,
                strVenue = it.strVenue,
                strVideo = it.strVideo
            )
        }

    //Timeline
    fun mapTimelineResponsesToEntities(input: List<TimelineResponse>): List<TimelineEntity> {
        val timelineList = ArrayList<TimelineEntity>()
        input.map {
            val timeline = TimelineEntity(
                idTimeline = it.idTimeline,
                idEvent = it.idEvent,
                strTimeline = it.strTimeline,
                strTimelineDetail = it.strTimelineDetail,
                strHome = it.strHome,
                strEvent = it.strEvent,
                idAPIfootball = it.idAPIfootball,
                idPlayer = it.idPlayer,
                strPlayer = it.strPlayer,
                strCountry = it.strCountry,
                idAssist = it.idAssist,
                strAssist = it.strAssist,
                intTime = it.intTime,
                idTeam = it.idTeam,
                strTeam = it.strTeam,
                strComment = it.strComment,
                dateEvent = it.dateEvent,
                strSeason = it.strSeason
            )
            timelineList.add(timeline)
        }
        return timelineList
    }

    fun mapTimelineEntitiesToDomain(input: List<TimelineEntity>): List<Timeline> =
        input.map {
            Timeline(
                idTimeline = it.idTimeline,
                idEvent = it.idEvent,
                strTimeline = it.strTimeline,
                strTimelineDetail = it.strTimelineDetail,
                strHome = it.strHome,
                strEvent = it.strEvent,
                idAPIfootball = it.idAPIfootball,
                idPlayer = it.idPlayer,
                strPlayer = it.strPlayer,
                strCountry = it.strCountry,
                idAssist = it.idAssist,
                strAssist = it.strAssist,
                intTime = it.intTime,
                idTeam = it.idTeam,
                strTeam = it.strTeam,
                strComment = it.strComment,
                dateEvent = it.dateEvent,
                strSeason = it.strSeason
            )
        }

    //Team
    fun mapClubResponsesToEntities(input: List<ClubResponse>): List<ClubEntity> {
        val teamList = ArrayList<ClubEntity>()
        input.map {
            val team = ClubEntity(
                idTeam = it.idTeam,
                idSoccerXML = it.idSoccerXML,
                idAPIfootball = it.idAPIfootball,
                intLoved = it.intLoved,
                strTeam = it.strTeam,
                strTeamShort = it.strTeamShort,
                strAlternate = it.strAlternate,
                intFormedYear = it.intFormedYear,
                strSport = it.strSport,
                strLeague = it.strLeague,
                idLeague = it.idLeague,
                strLeague2 = it.strLeague2,
                idLeague2 = it.idLeague2,
                strLeague3 = it.strLeague3,
                idLeague3 = it.idLeague3,
                strLeague4 = it.strLeague4,
                idLeague4 = it.idLeague4,
                strLeague5 = it.strLeague5,
                idLeague5 = it.idLeague5,
                strLeague6 = it.strLeague6,
                idLeague6 = it.idLeague6,
                strLeague7 = it.strLeague7,
                idLeague7 = it.idLeague7,
                strDivision = it.strDivision,
                strManager = it.strManager,
                strStadium = it.strStadium,
                strKeywords = it.strKeywords,
                strRSS = it.strRSS,
                strStadiumThumb = it.strStadiumThumb,
                strStadiumDescription = it.strStadiumDescription,
                strStadiumLocation = it.strStadiumLocation,
                intStadiumCapacity = it.intStadiumCapacity,
                strWebsite = it.strWebsite,
                strFacebook = it.strFacebook,
                strTwitter = it.strTwitter,
                strInstagram = it.strInstagram,
                strDescriptionEN = it.strDescriptionEN,
                strDescriptionDE = it.strDescriptionDE,
                strDescriptionFR = it.strDescriptionFR,
                strDescriptionCN = it.strDescriptionCN,
                strDescriptionIT = it.strDescriptionIT,
                strDescriptionJP = it.strDescriptionJP,
                strDescriptionRU = it.strDescriptionRU,
                strDescriptionES = it.strDescriptionES,
                strDescriptionPT = it.strDescriptionPT,
                strDescriptionSE = it.strDescriptionSE,
                strDescriptionNL = it.strDescriptionNL,
                strDescriptionHU = it.strDescriptionHU,
                strDescriptionNO = it.strDescriptionNO,
                strDescriptionIL = it.strDescriptionIL,
                strDescriptionPL = it.strDescriptionPL,
                strGender = it.strGender,
                strCountry = it.strCountry,
                strTeamBadge = it.strTeamBadge,
                strTeamJersey = it.strTeamJersey,
                strTeamLogo = it.strTeamLogo,
                strTeamFanart1 = it.strTeamFanart1,
                strTeamFanart2 = it.strTeamFanart2,
                strTeamFanart3 = it.strTeamFanart3,
                strTeamFanart4 = it.strTeamFanart4,
                strTeamBanner = it.strTeamBanner,
                strYoutube = it.strYoutube,
                strLocked = it.strLocked
            )
            teamList.add(team)
        }
        return teamList
    }

    fun mapClubEntitiesToDomain(input: List<ClubEntity>): List<Club> =
        input.map {
            Club(
                idTeam = it.idTeam,
                idSoccerXML = it.idSoccerXML,
                idAPIfootball = it.idAPIfootball,
                intLoved = it.intLoved,
                strTeam = it.strTeam,
                strTeamShort = it.strTeamShort,
                strAlternate = it.strAlternate,
                intFormedYear = it.intFormedYear,
                strSport = it.strSport,
                strLeague = it.strLeague,
                idLeague = it.idLeague,
                strLeague2 = it.strLeague2,
                idLeague2 = it.idLeague2,
                strLeague3 = it.strLeague3,
                idLeague3 = it.idLeague3,
                strLeague4 = it.strLeague4,
                idLeague4 = it.idLeague4,
                strLeague5 = it.strLeague5,
                idLeague5 = it.idLeague5,
                strLeague6 = it.strLeague6,
                idLeague6 = it.idLeague6,
                strLeague7 = it.strLeague7,
                idLeague7 = it.idLeague7,
                strDivision = it.strDivision,
                strManager = it.strManager,
                strStadium = it.strStadium,
                strKeywords = it.strKeywords,
                strRSS = it.strRSS,
                strStadiumThumb = it.strStadiumThumb,
                strStadiumDescription = it.strStadiumDescription,
                strStadiumLocation = it.strStadiumLocation,
                intStadiumCapacity = it.intStadiumCapacity,
                strWebsite = it.strWebsite,
                strFacebook = it.strFacebook,
                strTwitter = it.strTwitter,
                strInstagram = it.strInstagram,
                strDescriptionEN = it.strDescriptionEN,
                strDescriptionDE = it.strDescriptionDE,
                strDescriptionFR = it.strDescriptionFR,
                strDescriptionCN = it.strDescriptionCN,
                strDescriptionIT = it.strDescriptionIT,
                strDescriptionJP = it.strDescriptionJP,
                strDescriptionRU = it.strDescriptionRU,
                strDescriptionES = it.strDescriptionES,
                strDescriptionPT = it.strDescriptionPT,
                strDescriptionSE = it.strDescriptionSE,
                strDescriptionNL = it.strDescriptionNL,
                strDescriptionHU = it.strDescriptionHU,
                strDescriptionNO = it.strDescriptionNO,
                strDescriptionIL = it.strDescriptionIL,
                strDescriptionPL = it.strDescriptionPL,
                strGender = it.strGender,
                strCountry = it.strCountry,
                strTeamBadge = it.strTeamBadge,
                strTeamJersey = it.strTeamJersey,
                strTeamLogo = it.strTeamLogo,
                strTeamFanart1 = it.strTeamFanart1,
                strTeamFanart2 = it.strTeamFanart2,
                strTeamFanart3 = it.strTeamFanart3,
                strTeamFanart4 = it.strTeamFanart4,
                strTeamBanner = it.strTeamBanner,
                strYoutube = it.strYoutube,
                strLocked = it.strLocked,
                isFavorite = it.isFavorite
            )
        }

    //Equipment
    fun mapEquipmentResponsesToEntities(input: List<EquipmentResponse>): List<EquipmentEntity> {
        val equipmentList = ArrayList<EquipmentEntity>()
        input.map {
            val team = EquipmentEntity(
                idEquipment = it.idEquipment,
                idTeam = it.idTeam,
                date = it.date,
                strSeason = it.strSeason,
                strEquipment = it.strEquipment,
                strType = it.strType,
                strUsername = it.strUsername
            )
            equipmentList.add(team)
        }
        return equipmentList
    }

    fun mapEquipmentEntitiesToDomain(input: List<EquipmentEntity>): List<Equipment> =
        input.map {
            Equipment(
                idEquipment = it.idEquipment,
                idTeam = it.idTeam,
                date = it.date,
                strSeason = it.strSeason,
                strEquipment = it.strEquipment,
                strType = it.strType,
                strUsername = it.strUsername
            )
        }

    //Player
    fun mapPlayerResponsesToEntities(input: List<PlayerResponse>): List<PlayerEntity> {
        val playerList = ArrayList<PlayerEntity>()
        input.map {
            val team = PlayerEntity(
                idPlayer = it.idPlayer,
                idTeam = it.idTeam,
                idTeam2 = it.idTeam2,
                idTeamNational = it.idTeamNational,
                idSoccerXML = it.idSoccerXML,
                idAPIfootball = it.idAPIfootball,
                idPlayerManager = it.idPlayerManager,
                strNationality = it.strNationality,
                strPlayer = it.strPlayer,
                strTeam = it.strTeam,
                strTeam2 = it.strTeam2,
                strSport = it.strSport,
                intSoccerXMLTeamID = it.intSoccerXMLTeamID,
                dateBorn = it.dateBorn,
                strNumber = it.strNumber,
                dateSigned = it.dateSigned,
                strSigning = it.strSigning,
                strWage = it.strWage,
                strOutfitter = it.strOutfitter,
                strKit = it.strKit,
                strAgent = it.strAgent,
                strBirthLocation = it.strBirthLocation,
                strDescriptionEN = it.strDescriptionEN,
                strDescriptionDE = it.strDescriptionDE,
                strDescriptionFR = it.strDescriptionFR,
                strDescriptionCN = it.strDescriptionCN,
                strDescriptionIT = it.strDescriptionIT,
                strDescriptionJP = it.strDescriptionJP,
                strDescriptionRU = it.strDescriptionRU,
                strDescriptionES = it.strDescriptionES,
                strDescriptionPT = it.strDescriptionPT,
                strDescriptionSE = it.strDescriptionSE,
                strDescriptionNL = it.strDescriptionNL,
                strDescriptionHU = it.strDescriptionHU,
                strDescriptionNO = it.strDescriptionNO,
                strDescriptionIL = it.strDescriptionIL,
                strDescriptionPL = it.strDescriptionPL,
                strGender = it.strGender,
                strSide = it.strSide,
                strPosition = it.strPosition,
                strCollege = it.strCollege,
                strFacebook = it.strFacebook,
                strWebsite = it.strWebsite,
                strTwitter = it.strTwitter,
                strInstagram = it.strInstagram,
                strYoutube = it.strYoutube,
                strHeight = it.strHeight,
                strWeight = it.strWeight,
                intLoved = it.intLoved,
                strThumb = it.strThumb,
                strCutout = it.strCutout,
                strRender = it.strRender,
                strBanner = it.strBanner,
                strFanart1 = it.strFanart1,
                strFanart2 = it.strFanart2,
                strFanart3 = it.strFanart3,
                strFanart4 = it.strFanart4,
                strCreativeCommons = it.strCreativeCommons,
                strLocked = it.strLocked
            )
            playerList.add(team)
        }
        return playerList
    }

    fun mapPlayerEntitiesToDomain(input: List<PlayerEntity>): List<Player> =
        input.map {
            Player(
                idPlayer = it.idPlayer,
                idTeam = it.idTeam,
                idTeam2 = it.idTeam2,
                idTeamNational = it.idTeamNational,
                idSoccerXML = it.idSoccerXML,
                idAPIfootball = it.idAPIfootball,
                idPlayerManager = it.idPlayerManager,
                strNationality = it.strNationality,
                strPlayer = it.strPlayer,
                strTeam = it.strTeam,
                strTeam2 = it.strTeam2,
                strSport = it.strSport,
                intSoccerXMLTeamID = it.intSoccerXMLTeamID,
                dateBorn = it.dateBorn,
                strNumber = it.strNumber,
                dateSigned = it.dateSigned,
                strSigning = it.strSigning,
                strWage = it.strWage,
                strOutfitter = it.strOutfitter,
                strKit = it.strKit,
                strAgent = it.strAgent,
                strBirthLocation = it.strBirthLocation,
                strDescriptionEN = it.strDescriptionEN,
                strDescriptionDE = it.strDescriptionDE,
                strDescriptionFR = it.strDescriptionFR,
                strDescriptionCN = it.strDescriptionCN,
                strDescriptionIT = it.strDescriptionIT,
                strDescriptionJP = it.strDescriptionJP,
                strDescriptionRU = it.strDescriptionRU,
                strDescriptionES = it.strDescriptionES,
                strDescriptionPT = it.strDescriptionPT,
                strDescriptionSE = it.strDescriptionSE,
                strDescriptionNL = it.strDescriptionNL,
                strDescriptionHU = it.strDescriptionHU,
                strDescriptionNO = it.strDescriptionNO,
                strDescriptionIL = it.strDescriptionIL,
                strDescriptionPL = it.strDescriptionPL,
                strGender = it.strGender,
                strSide = it.strSide,
                strPosition = it.strPosition,
                strCollege = it.strCollege,
                strFacebook = it.strFacebook,
                strWebsite = it.strWebsite,
                strTwitter = it.strTwitter,
                strInstagram = it.strInstagram,
                strYoutube = it.strYoutube,
                strHeight = it.strHeight,
                strWeight = it.strWeight,
                intLoved = it.intLoved,
                strThumb = it.strThumb,
                strCutout = it.strCutout,
                strRender = it.strRender,
                strBanner = it.strBanner,
                strFanart1 = it.strFanart1,
                strFanart2 = it.strFanart2,
                strFanart3 = it.strFanart3,
                strFanart4 = it.strFanart4,
                strCreativeCommons = it.strCreativeCommons,
                strLocked = it.strLocked,
                isFavorite = it.isFavorite
            )
        }

    fun mapClubDomainToEntity(input: Club) = ClubEntity(
        idTeam = input.idTeam,
        idSoccerXML = input.idSoccerXML,
        idAPIfootball = input.idAPIfootball,
        intLoved = input.intLoved,
        strTeam = input.strTeam,
        strTeamShort = input.strTeamShort,
        strAlternate = input.strAlternate,
        intFormedYear = input.intFormedYear,
        strSport = input.strSport,
        strLeague = input.strLeague,
        idLeague = input.idLeague,
        strLeague2 = input.strLeague2,
        idLeague2 = input.idLeague2,
        strLeague3 = input.strLeague3,
        idLeague3 = input.idLeague3,
        strLeague4 = input.strLeague4,
        idLeague4 = input.idLeague4,
        strLeague5 = input.strLeague5,
        idLeague5 = input.idLeague5,
        strLeague6 = input.strLeague6,
        idLeague6 = input.idLeague6,
        strLeague7 = input.strLeague7,
        idLeague7 = input.idLeague7,
        strDivision = input.strDivision,
        strManager = input.strManager,
        strStadium = input.strStadium,
        strKeywords = input.strKeywords,
        strRSS = input.strRSS,
        strStadiumThumb = input.strStadiumThumb,
        strStadiumDescription = input.strStadiumDescription,
        strStadiumLocation = input.strStadiumLocation,
        intStadiumCapacity = input.intStadiumCapacity,
        strWebsite = input.strWebsite,
        strFacebook = input.strFacebook,
        strTwitter = input.strTwitter,
        strInstagram = input.strInstagram,
        strDescriptionEN = input.strDescriptionEN,
        strDescriptionDE = input.strDescriptionDE,
        strDescriptionFR = input.strDescriptionFR,
        strDescriptionCN = input.strDescriptionCN,
        strDescriptionIT = input.strDescriptionIT,
        strDescriptionJP = input.strDescriptionJP,
        strDescriptionRU = input.strDescriptionRU,
        strDescriptionES = input.strDescriptionES,
        strDescriptionPT = input.strDescriptionPT,
        strDescriptionSE = input.strDescriptionSE,
        strDescriptionNL = input.strDescriptionNL,
        strDescriptionHU = input.strDescriptionHU,
        strDescriptionNO = input.strDescriptionNO,
        strDescriptionIL = input.strDescriptionIL,
        strDescriptionPL = input.strDescriptionPL,
        strGender = input.strGender,
        strCountry = input.strCountry,
        strTeamBadge = input.strTeamBadge,
        strTeamJersey = input.strTeamJersey,
        strTeamLogo = input.strTeamLogo,
        strTeamFanart1 = input.strTeamFanart1,
        strTeamFanart2 = input.strTeamFanart2,
        strTeamFanart3 = input.strTeamFanart3,
        strTeamFanart4 = input.strTeamFanart4,
        strTeamBanner = input.strTeamBanner,
        strYoutube = input.strYoutube,
        strLocked = input.strLocked
    )

    fun mapPlayerDomainToEntity(input: Player) = PlayerEntity(
        idPlayer = input.idPlayer,
        idTeam = input.idTeam,
        idTeam2 = input.idTeam2,
        idTeamNational = input.idTeamNational,
        idSoccerXML = input.idSoccerXML,
        idAPIfootball = input.idAPIfootball,
        idPlayerManager = input.idPlayerManager,
        strNationality = input.strNationality,
        strPlayer = input.strPlayer,
        strTeam = input.strTeam,
        strTeam2 = input.strTeam2,
        strSport = input.strSport,
        intSoccerXMLTeamID = input.intSoccerXMLTeamID,
        dateBorn = input.dateBorn,
        strNumber = input.strNumber,
        dateSigned = input.dateSigned,
        strSigning = input.strSigning,
        strWage = input.strWage,
        strOutfitter = input.strOutfitter,
        strKit = input.strKit,
        strAgent = input.strAgent,
        strBirthLocation = input.strBirthLocation,
        strDescriptionEN = input.strDescriptionEN,
        strDescriptionDE = input.strDescriptionDE,
        strDescriptionFR = input.strDescriptionFR,
        strDescriptionCN = input.strDescriptionCN,
        strDescriptionIT = input.strDescriptionIT,
        strDescriptionJP = input.strDescriptionJP,
        strDescriptionRU = input.strDescriptionRU,
        strDescriptionES = input.strDescriptionES,
        strDescriptionPT = input.strDescriptionPT,
        strDescriptionSE = input.strDescriptionSE,
        strDescriptionNL = input.strDescriptionNL,
        strDescriptionHU = input.strDescriptionHU,
        strDescriptionNO = input.strDescriptionNO,
        strDescriptionIL = input.strDescriptionIL,
        strDescriptionPL = input.strDescriptionPL,
        strGender = input.strGender,
        strSide = input.strSide,
        strPosition = input.strPosition,
        strCollege = input.strCollege,
        strFacebook = input.strFacebook,
        strWebsite = input.strWebsite,
        strTwitter = input.strTwitter,
        strInstagram = input.strInstagram,
        strYoutube = input.strYoutube,
        strHeight = input.strHeight,
        strWeight = input.strWeight,
        intLoved = input.intLoved,
        strThumb = input.strThumb,
        strCutout = input.strCutout,
        strRender = input.strRender,
        strBanner = input.strBanner,
        strFanart1 = input.strFanart1,
        strFanart2 = input.strFanart2,
        strFanart3 = input.strFanart3,
        strFanart4 = input.strFanart4,
        strCreativeCommons = input.strCreativeCommons,
        strLocked = input.strLocked
    )
}